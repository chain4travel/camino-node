name: Build and publish on supported platforms

env:
  DEFAULT_BRANCH: chain4travel
  INSTALLATION_ID: ${{ vars.INSTALLATION_ID }}
  APP_ID: ${{ vars.APP_ID }}

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  e2e:
    name: e2e_caminojs
    runs-on: ubuntu-latest
    steps:
      - name: Generate JWT
        id: gen-jwt
        shell: bash
        run: |
          git clone https://github.com/gasconleon/jwt.sh.git && cd jwt.sh
          echo "${{ secrets.APP_PK }}" >> private.pem
          export jwt=$(./jwt.sh -a RS256 -P private.pem -p '{"exp": '$(date +%s -d +1minute)', "iat": '$(date +%s)', "iss": "${{env.APP_ID}}"}')
          echo "jwt=${jwt}" >> $GITHUB_OUTPUT
      - name: Generate token
        id: gen-token
        shell: bash
        run: |
          curl -X POST -H "Authorization: Bearer ${{ steps.gen-jwt.outputs.jwt }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/app/installations/${{env.INSTALLATION_ID}}/access_tokens
          export token=$(curl -X POST -H "Authorization: Bearer ${{ steps.gen-jwt.outputs.jwt }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/app/installations/${{env.INSTALLATION_ID}}/access_tokens | jq -r .'token')
          echo "token=${token}" >> $GITHUB_OUTPUT
      - name: Run e2e tests in caminojs
        shell: bash
        run: |
          echo token=${{ steps.gen-token.outputs.token }}
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ steps.gen-token.outputs.token }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/chain4travel/caminojs/actions/workflows/e2e.yml/dispatches -d '{"ref":";'${{env.DEFAULT_BRANCH}}'"}'

  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Run Build and Publish
        shell: bash
        run: scripts/build_releases.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
